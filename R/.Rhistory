library(ggplot2)
library(tidyverse)
library(readxl)
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
View(time)
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
View(time)
View(time)
time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9)
time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9) %>%
ggplot(aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
time %>%
ggplot(aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_log10() +
scale_y_log10() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
library(ggplot2)
library(tidyverse)
library(readxl)
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
time <- time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9)
time %>%
ggplot(aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Grafici/Confronto_Mediane.png")
library(ggplot2)
library(tidyverse)
library(readxl)
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
time <- time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9)
time %>%
ggplot(aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Grafici/Confronto_Mediane.png")
library(ggplot2)
library(tidyverse)
library(readxl)
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
time <- time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9)
time %>%
ggplot(aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Grafici/Confronto_Mediane.png")
time %>%
ggplot(aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank()) +
ggsave("Grafici/Confronto_Mediane.png")
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9) %>%
ggplot(aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Grafici/Confronto_Mediane.png")
time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9) %>%
ggplot(aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank()) %>%
ggsave("Grafici/Confronto_Mediane.png")
time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9) %>%
ggplot(aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Grafici/Confronto_Mediane.png")
time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9) %>%
ggplot(aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank()) +
ggsave("Grafici/Confronto_Mediane.png")
time <- time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9)
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
time <- time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9)
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Grafici/Confronto_Mediane.png")
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
time <- time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9)
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Grafici/Confronto_Mediane.png")
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank()) +
ggsave("Grafici/Confronto_Mediane.png")
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Grafici/Confronto_Mediane.png")
library(ggplot2)
library(tidyverse)
library(readxl)
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
time <- time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9)
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Grafici/Confronto_Mediane.png")
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_log10() +
scale_y_log10() +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_log10(breaks = scales::pretty_breaks(n = 10)) +
scale_y_log10(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_log10(breaks = scales::pretty_breaks()) +
scale_y_log10(breaks = scales::pretty_breaks()) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_log10() +
scale_y_log10() +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Grafici/Confronto_Mediane.png")
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
time <- time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9)
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Confronto_Mediane.png")
ggsave("Confronto_Mediane_log.png")
library(ggplot2)
library(tidyverse)
library(readxl)
# Creazione del csv dal xlsx
time <- write_csv(read_excel("../Time.xlsx", 101), "Time.csv")
time <- time %>%
gather(key = "tree_type", value = "ex_time", -n_nodi) %>%
mutate(ex_time = ex_time / 10^9)
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Confronto_Mediane.png")
ggplot(data = time, aes(x = n_nodi, y = ex_time, color = tree_type)) +
geom_point() +
geom_line() +
stat_smooth(method="gam") +
labs(y = "Execution time") +
scale_x_log10() +
scale_y_log10() +
theme(legend.position = c(.10, .90), legend.background = element_rect(fill = "transparent"), legend.title=element_blank())
ggsave("Confronto_Mediane_log.png")
